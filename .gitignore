# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local
.env

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

 things been learnt
visite nextjs.org to take the course.
clsx: conditional rendering.

how to add google fonts
1) first you create a file in the ui called fonts.ts
2) import it in the parent directory.

                        layout.
the purpose for the layout is to share  sidebar, apart from sidebar any form of ui you wish to share
it help with (dry principle) only on the parent.

once done with usePathname, now is setting up to database.

    postgress database power by neon
go to storage. click on create, select postgre neon. 
development name: dashboard. or you can name it as you see fit.
creat and connect click. go to env.log to see your password.

.env*.local
.env make sure this is on your gitignore file so it wont deploy to git hub.

npm i @vercel/postgre this is use to connect to vercel database.
next is seed database. check package.json seed. seed is a routes handler This 
creates a server-side endpoint that you can access in the browser to start populating your database.

                choosing how to fetch data
Fetch the last 5 invoices, sorted by date
import fetchlatestInvoices, await it.
What are request waterfalls?
A "waterfall" refers to a sequence of network requests that depend on the completion of previous requests. 
In the case of data fetching, each request can only begin once the previous request has returned data.

static and dynamic rendering.

Streaming is a data transfer technique that allows you to break down a route into 
smaller "chunks" and progressively stream them from the server to the client as they become ready.
Streaming works well with React's component model, as each component can be considered a chunk.

There are two ways you implement streaming in Next.js:

9
At the page level, with the loading.tsx file.
For specific components, with <Suspense>
loading.tsx, after creating the file you dont need to import it.
loading.tsx is a special Next.js file built on top of Suspense, it allows you to create fallback UI to show as a replacement while page content loads.
Since <SideNav> is static, it's shown immediately. The user can interact with <SideNav> while the dynamic content is loading.
Inside your loading.tsx file, import a new component called <DashboardSkeleton>:

/(overview) delay scheduled
Now, the loading.tsx file will only apply to your dashboard overview page.

Route groups allow you to organize files into logical groups without affecting the URL path structure. 
When you create a new folder using parentheses (), the name won't be included in the URL path. 
So /dashboard/(overview)/page.tsx becomes /dashboard.

Here, you're using a route group to ensure loading.tsx only applies to your dashboard overview page. 
However, you can also use route groups to separate your application into sections 
(e.g. (marketing) routes and (shop) routes) or by teams for larger applications.

11
search and pagination implimentation and functionality.
pnpm i use-debounce
This function will wrap the contents of handleSearch, and only run the code after a specific time once the user has stopped typing (300ms).

    server action. 12
You'll notice that amount is of type string and not number.
 This is because input elements with type="number" actually return a string, not a number!

 Handling all errors with 13
 
 improve accessibility. 14
